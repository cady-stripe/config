set-option -g default-shell /bin/bash

# remap prefix to Control + a
set -g prefix M-p
# bind 'C-a C-a' to type 'C-a'
bind M-Space send-prefix
unbind C-b
# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set -g history-limit 10000

set -g status-keys vi
set -g mode-keys vi
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

unbind-key -T copy-mode-vi 'Home'
bind-key -T copy-mode-vi 'Home' send -X start-of-line
unbind-key -T copy-mode-vi 'End'
bind-key -T copy-mode-vi 'End' send -X end-of-line

set -g mouse on

bind-key -n M-d split-window -h
bind-key -n M-C-d split-window -v

bind-key -n M-J resize-pane -D 5
bind-key -n M-K resize-pane -U 5
bind-key -n M-H resize-pane -L 5
bind-key -n M-L resize-pane -R 5

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-Tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys C-w \; send-keys h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys C-w \; send-keys j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys C-w \; send-keys k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys C-w \; send-keys l" "select-pane -R"
bind -n M-\ if-shell "$is_vim" "send-keys C-w \; send-keys \\" "select-pane -l"

# Switch windows
bind -n M-u  previous-window
bind -n M-i next-window
bind -n M-o  new-window

# Reload tmux config
bind r source-file ~/.tmux.conf
