set-option -g default-shell /usr/bin/zsh
set -g default-terminal "screen-256color"

# remap prefix to Control + a
set -g prefix M-p
unbind C-b
unbind p
bind p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"
# 0 is too far from ` ;)
set -g base-index 1
set -sg escape-time 0

# Automatically set window title
set-window-option -g automatic-rename on
set -g history-limit 10000

set -g status-keys vi
set -g mode-keys vi

bind -n F10 copy-mode
bind v copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

unbind-key -T copy-mode-vi 'Home'
bind-key -T copy-mode-vi 'Home' send -X start-of-line
bind-key -T copy-mode-vi 'C-a' send -X start-of-line
unbind-key -T copy-mode-vi 'End'
bind-key -T copy-mode-vi 'End' send -X end-of-line
bind-key -T copy-mode-vi 'C-e' send -X end-of-line

set -g mouse on

bind-key -n M-d split-window -h
bind-key -n M-C-d split-window -v

bind-key -n M-J resize-pane -D 5
bind-key -n M-K resize-pane -U 5
bind-key -n M-H resize-pane -L 5
bind-key -n M-L resize-pane -R 5

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-Tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys C-w \; send-keys h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys C-w \; send-keys j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys C-w \; send-keys k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys C-w \; send-keys l" "select-pane -R"
# bind -n M-\ if-shell "$is_vim" "send-keys C-w \; send-keys \\" "select-pane -l"

# Switch windows
bind -n M-u  previous-window
bind -n M-i next-window
bind -n M-o  new-window

# Rebind home end keys
bind -n End send-key C-e
bind -n Home send-key C-a

# Reload tmux config
bind r source-file ~/.tmux.conf

# status bar theme
set -g status-bg 'colour235'
set -g status-justify 'centre'
set -g status-left-length '100'
set -g status 'on'
set -g status-right-length '100'
setw -g window-status-separator ''
set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #W #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] #(whoami)  #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
set -g status-right '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] %r  %a  %h %d %Y #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #H #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour232,bg=colour154] #(rainbarf --battery --remaining --no-rgb) '
setw -g window-status-format '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour100,bg=colour235] #I  #W #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
setw -g window-status-current-format '#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #I  #W #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'
